env:
  RUBY_VERSION: 2.7.6

on:
  push:
    branches:
      - '**'
      
jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            linters_ruby:
              - '!(.deploy/|.github/)**/*.{rb,erb,rake}'
              - '{config.ru,Dockerfile,Envfile,Gemfile,Gemfile.lock,Makefile,Rakefile,.rubocop.yml,ruby-version}'
            linters_js:
              - '!(.deploy/|.github/)**/*.{css,html,js,json,jsx,sass,scss,ts,tsx,vue}'

      - name: Set up Ruby
        if: steps.filter.outputs.linters_ruby == 'true'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Formatting and Security Checks
        if: steps.filter.outputs.linters_ruby == 'true'
        run: |
          bundle exec rubocop

      - name: Set up Node.js
        if: steps.filter.outputs.linters_js == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set up NPM authentication
        if: steps.filter.outputs.linters_js == 'true'
        run: |
          echo "always-auth=true" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.READ_GITHUB_PKG_TOKEN }}" >> ~/.npmrc
          echo "@strongsdcom:registry=https://npm.pkg.github.com/" >> ~/.npmrc
      - name: Install Node.js dependencies
        if: steps.filter.outputs.linters_js == 'true'
        run: |
          yarn policies set-version ${{ env.YARN_VERSION }}
          yarn install
      - name: Run linters
        if: steps.filter.outputs.linters_js == 'true'
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ github.token }}
          eslint: true
            #prettier: true
      - name: Set up linters status
        env:
          LINTERS_JS_FILTER_STATUS: ${{ steps.filter.outputs.linters_js }}
        run: |
          #!/usr/bin/env bash
          Linter_names=('ESlint' 'Prettier')

          if [[ $LINTERS_JS_FILTER_STATUS == false ]]; then
            for linter_name in "${Linter_names[@]}"; do
              curl -X POST https://api.github.com/repos/mako-max/test-actions/check-runs \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: token ${{ github.token }}" \
                -d "{\"name\":$linter_name,\"head_sha\":${{ github.sha }},\"status\":\"completed\",\"conclusion\":\"success\",\"output\":{\"title\":$linter_name\" report\",\"summary\":\"\",\"text\":\"Linter passed since none of the files changed\"}}"
            done
          else
            echo "Step skipped since files were changed"
          fi
